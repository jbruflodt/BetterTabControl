<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:BetterTabs"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    <local:ChangeColorBrightness x:Key="ChangeColorBrightness"/>
    <local:TabPresenterWidthCalculator x:Key="TabPresenterWidthCalculator"/>
    <local:ScrollButtonsVisibilityConverter x:Key="ScrollButtonsVisibilityConverter"/>
    <FontWeight x:Key="BoldFont">Bold</FontWeight>
    <ItemsPanelTemplate x:Key="TabPanelTemplate">
        <StackPanel IsItemsHost="True" Orientation="Horizontal"/>
    </ItemsPanelTemplate>
    <System:Double x:Key="NewTabWidth"/>
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="0" Height="20" VerticalAlignment="Stretch" Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NewTabButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Margin="0">
                        <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Height="Auto" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="False"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{Binding MouseOverTabBackgroundColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding MouseOverTabTextColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding MouseOverTabTextColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                            <Setter Property="Background" TargetName="border" Value="{Binding MouseOverTabBackgroundColor, ConverterParameter=-.25, Converter={StaticResource ChangeColorBrightness}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:Tab}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Tab" >
                    <Grid x:Name="TabBackground" Background="{Binding TabBackgroundColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}" AllowDrop="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="TitleContent" HorizontalAlignment="Center" Height="Auto" VerticalAlignment="Center" Width="Auto" ContentSource="TabTitle" Margin="3"/>
                        <Button x:Name="CloseButton" Content="{Binding CloseButtonContent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}" VerticalAlignment="Center" Width="Auto" Grid.Column="1" FontWeight="{DynamicResource BoldFont}" Foreground="{x:Null}" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0" HorizontalContentAlignment="Center" MinWidth="8" Padding="3" Margin="2,0" VerticalContentAlignment="Center" Focusable="False" HorizontalAlignment="Center">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border BorderThickness="0" Height="20" VerticalAlignment="Stretch" Background="{TemplateBinding Background}">
                                                    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="IsHitTestVisible" TargetName="TabBackground" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="TextBlock.Foreground" TargetName="TitleContent" Value="{Binding SelectedTabTextColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                            <Setter Property="Background" TargetName="TabBackground" Value="{Binding SelectedTabBackgroundColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                            <Setter Property="Foreground" TargetName="CloseButton" Value="{Binding SelectedTabTextColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextBlock.Foreground" TargetName="TitleContent" Value="{Binding MouseOverTabTextColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                            <Setter Property="Background" TargetName="TabBackground" Value="{Binding MouseOverTabBackgroundColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                            <Setter Property="Foreground" TargetName="CloseButton" Value="{Binding MouseOverTabTextColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="CloseButton">
                            <Setter Property="Background" TargetName="CloseButton" Value="{Binding MouseOverTabBackgroundColor, ConverterParameter=.25, Converter={StaticResource ChangeColorBrightness}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                            <Setter Property="Foreground" TargetName="CloseButton" Value="{Binding MouseOverCloseTabTextColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True" SourceName="CloseButton">
                            <Setter Property="Foreground" TargetName="CloseButton" Value="{Binding MouseOverCloseTabTextColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                            <Setter Property="Background" TargetName="CloseButton" Value="{Binding MouseOverTabBackgroundColor, ConverterParameter=-.25, Converter={StaticResource ChangeColorBrightness}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsPressed}" Value="True">
                            <Setter Property="Background" TargetName="TabBackground" Value="{Binding MouseOverTabBackgroundColor, ConverterParameter=-.25, Converter={StaticResource ChangeColorBrightness}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                            <Setter Property="TextBlock.Foreground" TargetName="TitleContent" Value="{Binding MouseOverTabTextColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                            <Setter Property="Foreground" TargetName="CloseButton" Value="{Binding MouseOverTabTextColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:BetterTabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:BetterTabControl">
                    <Grid x:Name="baseGrid" Width="{TemplateBinding ActualWidth}" d:DesignWidth="800" Height="{TemplateBinding ActualHeight}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid x:Name="TabBar" Margin="0" AllowDrop="True" ClipToBounds="True" Background="{Binding BarBackgroundColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto">
                                    <ColumnDefinition.MaxWidth>
                                        <MultiBinding Converter="{StaticResource TabPresenterWidthCalculator}">
                                            <Binding ElementName="TabBar" Path="ActualWidth"/>
                                            <Binding ElementName="NewTabButton" Path="ActualWidth"/>
                                            <Binding ElementName="ScrollButtons" Path="ActualWidth"/>
                                        </MultiBinding>
                                    </ColumnDefinition.MaxWidth>
                                </ColumnDefinition>
                                <ColumnDefinition MinWidth="{Binding ActualWidth, ElementName=NewTabButton, Mode=OneWay}" Width="*"/>
                                <ColumnDefinition Width="{Binding ActualWidth, ElementName=ScrollButtons, Mode=OneWay}"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="3" MaxHeight="3" MinHeight="3"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="ScrollButtons" HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0" Grid.Column="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="ScrollRight" Content="&gt;" Height="Auto" VerticalAlignment="Stretch" Margin="0" Grid.Column="1" FontWeight="Bold" Command="ScrollBar.LineRightCommand" CommandTarget="{Binding TabsPresenter, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding TabsPresenter.TabScroller.ScrollableWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ScrollButtonsVisibilityConverter}}"/>
                                <Button x:Name="ScrollLeft" Content="&lt;" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0" FontWeight="Bold" Command="ScrollBar.LineLeftCommand" CommandTarget="{Binding TabsPresenter, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding TabsPresenter.TabScroller.ScrollableWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ScrollButtonsVisibilityConverter}}"/>
                            </Grid>
                            <Rectangle x:Name="Ribbon" Fill="{TemplateBinding RibbonColor}" Height="3" Margin="0" Grid.Row="1" Grid.ColumnSpan="3"/>
                            <local:BetterTabsPresenter x:Name="TabsPresenter" VerticalContentAlignment="Stretch" ScrollViewer.CanContentScroll="True" ItemsSource="{TemplateBinding Tabs}" ClipToBounds="False" Focusable="False">
                                <local:BetterTabsPresenter.MaxWidth>
                                    <MultiBinding Converter="{StaticResource TabPresenterWidthCalculator}">
                                        <Binding ElementName="TabBar" Path="ActualWidth"/>
                                        <Binding ElementName="NewTabButton" Path="ActualWidth"/>
                                        <Binding ElementName="ScrollButtons" Path="ActualWidth"/>
                                    </MultiBinding>
                                </local:BetterTabsPresenter.MaxWidth>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel x:Name="StackPanel" IsItemsHost="True" Orientation="Horizontal" CanHorizontallyScroll="True" ScrollViewer.CanContentScroll="True" ClipToBounds="False"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </local:BetterTabsPresenter>
                            <Button x:Name="NewTabButton" Content="{TemplateBinding NewTabDisplayText}" Height="27" MinWidth="20" FontWeight="Bold" MinHeight="17" MaxHeight="47" MaxWidth="50" FocusVisualStyle="{x:Null}" Width="Auto" Margin="0" HorizontalAlignment="Left" Grid.Column="1">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Padding" Value="1"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border x:Name="border" Margin="0">
                                                        <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Height="Auto" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.FontWeight="Bold"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsFocused" Value="False"/>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" TargetName="border" Value="{Binding MouseOverTabBackgroundColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                                                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding MouseOverTabTextColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding MouseOverTabTextColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                                                            <Setter Property="Background" TargetName="border" Value="{Binding MouseOverTabBackgroundColor, ConverterParameter=-.25, Converter={StaticResource ChangeColorBrightness}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:BetterTabControl}}}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsFocused" Value="True"/>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                        <ContentControl x:Name="CurrentContent" Content="{TemplateBinding SelectedContent}" Grid.Row="1" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" ContentTemplate="{TemplateBinding SelectedContentTemplate}" DataContext="{TemplateBinding SelectedTab}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="local:BetterTabsPresenter">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:BetterTabsPresenter">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                        <ScrollViewer x:Name="TabScroller" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Margin="0" Grid.ColumnSpan="1" VerticalScrollBarVisibility="Disabled" CanContentScroll="True" Focusable="False" >
                            <ItemsPresenter x:Name="ItemsPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ClipToBounds" Value="True"/>
    </Style>
</ResourceDictionary>
